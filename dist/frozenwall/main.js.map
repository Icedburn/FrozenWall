{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/projects/parallel/parallel-example.component.ts","./src/app/projects/parallel/parallel-example.component.html","./src/app/projects/parallel/parallel-example.service.ts","./src/app/projects/project-list.component.ts","./src/app/projects/project-list.component.html","./src/app/projects/project.service.ts","./src/app/resume/resume.component.ts","./src/app/resume/resume.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'pm-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  pageTitle = 'William Diniz_';\n}\n","<div class='iced-main-organizer'>\n  <!--\n  ------------- Navbar\n  -->\n  <nav class='navbar iced-navbar navbar-expand-lg position-static'>\n    <div class='container'>\n\n      <a class='navbar-brand' routerLinkActive='active' [routerLink]=\"['/home']\">{{pageTitle}}</a>\n      <button class='navbar-toggler' type='button' data-toggle='collapse' data-target=\"#frozenNavbar\"\n              aria-controls='frozenNavbar' aria-expanded='false' aria-label='Toogle Navigation'>\n        <fa-icon [icon]=\"['fas','bars']\" size='1x' title='Menu'></fa-icon>\n  <!--      <span class='navbar-toggler-icon'></span>-->\n      </button>\n\n      <div class='navbar-collapse collapse justify-content-end' id='frozenNavbar'>\n\n        <ul class='navbar-nav normal-links'>\n          <li class='nav-item'>\n              <a class='nav-link' routerLinkActive='active' [routerLink]=\"['/home']\">Welcome</a>\n          </li>\n          <li class='nav-item'>\n            <a class='nav-link' routerLinkActive='active' [routerLink]=\"['/resume']\">Resume</a>\n          </li>\n          <li class='nav-item'>\n            <a class='nav-link' routerLinkActive='active' [routerLink]=\"['/projects']\">Projects</a>\n          </li>\n\n        </ul>\n        <ul class='navbar-nav social-links list-group-horizontal'>\n\n          <li class='nav-item list-group-item'>\n            <a class='nav-link' href='https://www.linkedin.com/in/william-diniz-21697216/'>\n              <fa-icon [icon]=\"['fab','linkedin']\" size='lg' title='My LinkedIn'></fa-icon>\n            </a>\n          </li>\n          <li class='nav-item list-group-item'>\n            <a class='nav-link' href='https://github.com/Icedburn/'>\n              <fa-icon [icon]=\"['fab','github']\" size='lg' title='My GitHub'></fa-icon>\n            </a>\n          </li>\n          <li class='nav-item list-group-item'>\n            <a class='nav-link' href='https://www.instagram.com/william.rk.diniz/'>\n              <fa-icon [icon]=\"['fab','instagram']\" size='lg' title='My Instagram'></fa-icon>\n            </a>\n          </li>\n          <li class='nav-item list-group-item'>\n            <a class='nav-link' href='mailto:wrkdiniz@gmail.com'>\n              <fa-icon [icon]=\"['fas','envelope']\" size='lg' title='My Email'></fa-icon>\n            </a>\n          </li>\n\n        </ul>\n\n      </div>\n    </div>\n\n  </nav>\n\n  <!--\n  ------------- Main Content\n  -->\n\n  <div class='iced-main-container container'>\n    <router-outlet></router-outlet>\n  </div>\n\n  <!--\n  ------------- Footer\n  -->\n\n  <div class='iced-footer'>\n    <div class='row align-items-center'>\n      <div class='col-12'>\n        Copyright &copy; 2020 Developed by Icedburn\n      </div>\n    </div>\n  </div>\n\n</div>\n\n\n\n\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\nimport {RouterModule} from '@angular/router';\nimport {FormsModule} from '@angular/forms';\n\nimport {AppComponent} from './app.component';\nimport {HomeComponent} from './home/home.component';\nimport {ProjectListComponent} from './projects/project-list.component';\nimport {ResumeComponent} from './resume/resume.component';\nimport {ParallelExampleComponent} from './projects/parallel/parallel-example.component';\n\nimport {\n  faGithub,\n  faInstagram,\n  faLinkedin\n} from '@fortawesome/free-brands-svg-icons';\nimport {FontAwesomeModule, FaIconLibrary} from '@fortawesome/angular-fontawesome';\nimport {faBars, faEnvelope} from '@fortawesome/free-solid-svg-icons';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    ProjectListComponent,\n    ResumeComponent,\n    ParallelExampleComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FontAwesomeModule,\n    RouterModule.forRoot([\n      {path: 'home', component: HomeComponent},\n      {path: 'projects', component: ProjectListComponent},\n      {path: 'resume', component: ResumeComponent},\n      {path: 'projects/parallel-example', component: ParallelExampleComponent},\n      {path: '', redirectTo: 'home', pathMatch: 'full'},\n      {path: '**', redirectTo: 'home', pathMatch: 'full'}\n    ]),\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  constructor(iconLib: FaIconLibrary) {\n    iconLib.addIcons(faLinkedin, faGithub, faInstagram, faBars, faEnvelope);\n  }\n}\n","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent {\r\n  public pageTitle = 'Welcome Page Title';\r\n}\r\n","  <div class=\"container-fluid bg-transparent\">\r\n\r\n    <div class=\"iced-title text-center\">\r\n      Hello, I'm William!\r\n    </div>\r\n\r\n    <div class='row justify-content-center'>\r\n\r\n      <div class='iced-text text-justify'>\r\n\r\n        <p>Geek who love hiking? Or Hiker that love tech? Completely passionate for new technologies, I like to describe\r\n          myself as an early adopter. Hey, I had developed my first webpage with 11 years old on 2bg (before Google,\r\n          1996 DC) and had to deal with things like memmaker on MS-DOS to play my games!</p>\r\n\r\n        <p>I graduated in Electrical Engineering and had been working with lot of different techs so far, specially on\r\n          backend, cloud and devops focused on microservices architectures. I had already had the chance to work with\r\n          languages like C#, .NET Core, NodeJS, Python, Ruby, etc... And also some other techs like Docker, Kubernetes,\r\n          SQL Server, Cassandra (NoSQL), RabbitMQ, SQS/SNS, AWS and GCP tools, Chef and a lot of other things (did I\r\n          mention my new go GoLang passion?). On frontend side, I had already played with Angular (this site actually),\r\n          bootstrap, javascript and some others.</p>\r\n\r\n        <p>So, I decided to build this page as a small portfolio for personal projects. Here you will find some cool\r\n          projects (for fun or to study) that I do when I'm not working, playing video games or hiking =] I really hope\r\n          that you enjoy it!</p>\r\n\r\n        <p>In case of any question, please fell free to contact me in one of my networks or my personal e-mail! Ps.: You\r\n          may also see some of my projects signed as <i>\"Iced\"</i> or <i>\"Icedburn\"</i> that is my nicknames in some games and places.\r\n        </p>\r\n      </div>\r\n\r\n      <img class='img-fluid align-items-center img-thumbnail'\r\n           src='assets/img/salto.gif'\r\n           alt='A nice trip'\r\n           style='margin-top: 3rem'>\r\n    </div>\r\n  </div>\r\n\r\n","import {Component} from '@angular/core';\r\nimport {ParallelExampleService} from './parallel-example.service';\r\n\r\n@Component({\r\n  selector: 'fw-parallel-example',\r\n  templateUrl: './parallel-example.component.html',\r\n  styleUrls: ['./parallel-example.component.css']\r\n})\r\n\r\nexport class ParallelExampleComponent {\r\n  exampleInput = '';\r\n  exampleResult = '';\r\n  errorMsg = '';\r\n\r\n  constructor(private ParallelExampleService: ParallelExampleService) {\r\n  }\r\n\r\n  runExample(): void {\r\n    if (this.exampleInput !== '')\r\n    {\r\n      this.ParallelExampleService.getResponse(this.exampleInput).subscribe({\r\n        next: res => this.exampleResult = res[\"result\"],\r\n        error: err => {\r\n          this.errorMsg = err;\r\n          this.exampleResult = '';\r\n        }\r\n      });\r\n    }\r\n    else\r\n    {\r\n      this.exampleResult = 'You need to write something to play =(';\r\n    }\r\n  }\r\n}\r\n","<div class=\"container-fluid bg-transparent\">\r\n\r\n  <div class=\"iced-title text-center\">\r\n    An Simple Example\r\n    <a href='https://github.com/Icedburn/iced-chat' style='color: gold'>\r\n      <fa-icon [icon]=\"['fab','github']\" size='md' title='This Project on GitHub'></fa-icon>\r\n    </a>\r\n  </div>\r\n\r\n  <div class='row justify-content-center'>\r\n\r\n    <div class='iced-text text-justify'>\r\n      <p>So... everyone always talks about Parallel Programming and their many benefits, especially on performance. But how\r\n      are our minds ready to deal with parallel programming? Hmm... let's see a simple example?</p>\r\n      <p> Below you will see a tiny text box. You can enter whatever you want (well, actually I restricted it to 20\r\n        characters). The idea of this experiment is simple. The program will get character by character and rewrite whatever you\r\n        wrote in the box. Each character will be processed in parallel. Can you imagine what will happen? Will the same text\r\n        appears below? Please, have a try, enter the text and press the OK button =]</p>\r\n      <br>\r\n      <div class='container iced-parallel-example'>\r\n        <div class=\"row align-items-center\">\r\n          <div class=\"col-3\">Input Text:</div>\r\n          <div class=\"col-4\">\r\n            <input type=\"text\" class='w-100' [(ngModel)]='exampleInput' maxlength='20'/>\r\n          </div>\r\n          <div class=\"col-4 align-items-start\">\r\n            <button class='btn btn-primary iced-button-example'\r\n                    (click)='runExample()'>Run!</button>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\" *ngIf='exampleResult != \"\" && errorMsg ==\"\"'>\r\n          <div class=\"col-3\">\r\n            <h4>Result: </h4>\r\n          </div>\r\n          <div class=\"col-4 iced-parallel-example-result\">\r\n            <h4>{{exampleResult}}</h4>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\" *ngIf='errorMsg != \"\"'>\r\n          <div class=\"col-3\">\r\n            <h4>Result: </h4>\r\n          </div>\r\n          <div class=\"col-9 iced-parallel-example-result\">\r\n            <h4>\r\n              Whops, that's a little embarrassing, but I guess my backend is down at the moment... Do you mind send me an\r\n              <a href=\"mailto:wrkdiniz@gmail.com\">e-mail</a>, please? Really sorry about that =(\r\n            </h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <br>\r\n      <br>\r\n      <p><i>Wait, what?! It seems like the same characters... but completely scrambled... What happened?!</i></p>\r\n      <br>\r\n      <p>Well... you see... Every single character was processed in parallel. But think about it. You may have, for many\r\n        reasons, a processor core, or a thread faster than other. You can't guarantee that all threads will take the same\r\n        amount of time to complete their task. In the end, the first character of the result not necessary will be the first\r\n        character of the input. Instead, it will be the first character that the parallel process finishes first. The order of the\r\n        characters in the result will actually be the order of the fastest thread to the slowest one. If the thread of the\r\n        first character is the slowest one, the first character will appear as the las one in the result.</p>\r\n      <p>That's what we call as an async program flow, where we can't control the order of the events since they don't wait\r\n        wait for each other (well, unless we ask them to...). And that's an simple example of how careful we need to be when\r\n        dealing with async programming.</p>\r\n      <p>This example was built in <span class='iced-language-word'>Go</span> using Go Routines to do the parallel process and\r\n        Go Channels to aggregate the result. Also the time for each thread was artificially implemented as a random thread sleep\r\n        to guarantee different process times as in real life (The backend server won't have lot of things running, which is not\r\n        a real scenario).</p>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpErrorResponse, HttpHeaders} from '@angular/common/http';\r\nimport {Observable, throwError} from 'rxjs';\r\nimport {catchError, tap} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ParallelExampleService {\r\n  constructor(private http: HttpClient) {}\r\n  private projectUrl = 'http://iced-chat.icedburn.com:9999/';\r\n\r\n  private static handleError(err: HttpErrorResponse): Observable<never> {\r\n    let errorMessage = '';\r\n    if (err.error instanceof ErrorEvent) {\r\n      errorMessage = `An error occurred: ${err.error.message}`;\r\n    } else {\r\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\r\n    }\r\n    console.error(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n\r\n  getResponse(textInput: string): Observable<string> {\r\n\r\n    const headers = new HttpHeaders()\r\n      .append('Access-Control-Request-Headers', '*');\r\n\r\n    const options = {\r\n      headers\r\n    };\r\n\r\n    console.log(textInput);\r\n    return this.http.get<string>(this.projectUrl + textInput, options)\r\n      .pipe(\r\n        tap(data => console.log('ParallelResponse: ' + data[\"result\"])),\r\n        catchError(ParallelExampleService.handleError)\r\n      );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { IProject } from './IProject';\r\nimport {ProjectService} from './project.service';\r\n\r\n@Component({\r\n  selector: 'fw-projects',\r\n  templateUrl: './project-list.component.html',\r\n  styleUrls: ['./project-list.component.css']\r\n})\r\n\r\nexport class ProjectListComponent implements OnInit {\r\n  pageTitle = 'Project List';\r\n  showLastUpdated = false;\r\n  errorMessage: string;\r\n  filteredProjects: IProject[];\r\n\r\n  _listFilter: string;\r\n  get listFilter(): string {\r\n    return this._listFilter;\r\n  }\r\n  set listFilter(value: string) {\r\n    this._listFilter = value;\r\n    this.filteredProjects = this.listFilter && this.listFilter !== '' ? this.performFilter(this.listFilter) : this.projects;\r\n  }\r\n  projects: IProject[] = [];\r\n\r\n  constructor(private projectService: ProjectService) {\r\n  }\r\n\r\n  toogleId(): void {\r\n    this.showLastUpdated = !this.showLastUpdated;\r\n  }\r\n\r\n  private performFilter(filterBy: string): IProject[] {\r\n    filterBy = filterBy.toLowerCase();\r\n    return this.projects.filter(\r\n      (project: IProject) => {\r\n        return (project.Name.toLocaleLowerCase().indexOf(filterBy) !== -1 || project.Language.toLowerCase().indexOf(filterBy) !== -1);\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.projectService.getProjects().subscribe({\r\n      next: projects => {\r\n        this.projects = projects;\r\n        this.filteredProjects = this.projects;\r\n        this._listFilter = '';\r\n      },\r\n      error: err => this.errorMessage = err\r\n    });\r\n    this.filteredProjects = this.projects;\r\n    this._listFilter = '';\r\n  }\r\n}\r\n","<div class='container-fluid bg-transparent'>\r\n\r\n  <div class=\"iced-title text-center\">\r\n    My Projects =]\r\n  </div>\r\n\r\n  <div class='row justify-content-center'>\r\n\r\n    <div class='container iced-text'>\r\n      <div class='row text-justify'>\r\n        <p>In this page you will find a list of my projects. Well... Actually this page itself is the first project listed,\r\n        so it is a good example on how it works. On every line you will find a GitHub link for the project and a link to see\r\n        how it works. In each project page you will find a small explanation of the project, like the paragraph below and a way\r\n        to see the project working.</p>\r\n        <p>Although it's a simple page, I decided to build it on <span class='iced-language-word'>Angular</span> to study/play\r\n          with it. Also it 100% hosted on <span class='iced-language-word'>AWS</span>. Yes, a completely overkill, but hey!\r\n          You can find a nice \"Show Last Update\" button to show or hide some data of the table. Also a filter that you can\r\n          filter the projects by their name or language (or both). So, if you want to see only Go language project, just\r\n          filter by \"Go\" :)</p>\r\n      </div>\r\n    </div>\r\n\r\n    <div class='row'>\r\n      <div class=\"container iced-projects-table table-responsive-lg\">\r\n        <div class='container container iced-filter'>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-2\">Filter by:</div>\r\n            <div class=\"col-md-2\">\r\n              <input type=\"text\" [(ngModel)]='listFilter' />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\" *ngIf='listFilter != \"\"'>\r\n            <div class=\"col-md-6\">\r\n              <h4>Filtered by: {{listFilter}}</h4>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <table class=\"table table-striped table-hover table-dark w-100\" *ngIf=\"projects && projects.length\">\r\n          <thead>\r\n            <tr>\r\n              <th>\r\n                <button class=\"btn btn-primary btn-sm\"\r\n                (click)='toogleId()'>\r\n                  {{showLastUpdated ? \"Hide\" : \"Show\"}} Last Update\r\n                </button>\r\n              </th>\r\n              <th>Project</th>\r\n              <th>Language</th>\r\n              <th>GitHub</th>\r\n              <th>Link</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          <tr *ngFor='let project of filteredProjects'>\r\n            <td>{{showLastUpdated ? project.LastUpdate : \"\"}}</td>\r\n            <td>{{project.Name}}</td>\r\n            <td>{{project.Language}}</td>\r\n            <td><a href='{{project.GitHubLink}}'>GitHub</a></td>\r\n            <td><a [href]='project.ProjectLink'>{{project.Name}}</a></td>\r\n          </tr>\r\n\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\r\nimport {IProject} from './IProject';\r\nimport {Observable, throwError} from 'rxjs';\r\nimport {catchError, tap} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ProjectService {\r\n  constructor(private http: HttpClient) {}\r\n  private projectUrl = 'data/projects.json';\r\n\r\n  private static handleError(err: HttpErrorResponse): Observable<never> {\r\n    let errorMessage = '';\r\n    if (err.error instanceof ErrorEvent) {\r\n      errorMessage = `An error occurred: ${err.error.message}`;\r\n    } else {\r\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\r\n    }\r\n    console.error(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n\r\n  getProjects(): Observable<IProject[]> {\r\n    return this.http.get<IProject[]>(this.projectUrl)\r\n      .pipe(\r\n        tap(data => console.log('All: ' + JSON.stringify(data))),\r\n        catchError(ProjectService.handleError)\r\n      );\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\n\r\n@Component ({\r\n  selector: 'fw-resume',\r\n  templateUrl: './resume.component.html',\r\n  styleUrls: ['./resume.component.css']\r\n})\r\nexport class ResumeComponent {\r\n}\r\n","<div class=\"container-fluid bg-transparent\">\r\n\r\n  <div class=\"iced-title text-center\">\r\n    My Resume\r\n  </div>\r\n\r\n  <div class='row justify-content-center'>\r\n\r\n    <div class='container iced-text'>\r\n      <p>Hi! I'm very happy that you are interested in my resume! Well... I know that some browser may have trouble to see\r\n      it embeded, so no worries! If you don't see it below or if you want to download it... just click the button below =]</p>\r\n    </div>\r\n\r\n    <div class='container d-flex justify-content-center'>\r\n        <a href='assets/pdf/CV_WilliamDiniz.pdf' type='button' class='btn btn-primary btn-lg btn-iced-resume'>Download Resume</a>\r\n    </div>\r\n\r\n    <div class='container'>\r\n      <object data=\"assets/pdf/CV_WilliamDiniz.pdf\" type=\"application/pdf\" width=\"100%\" height=\"800px\">\r\n        <p>It appears that your browser didn't support embed PDF. Please, click here to download my resume: </p>\r\n        <a href='assets/pdf/CV_WilliamDiniz.pdf'></a>\r\n      </object>\r\n    </div>\r\n  </div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}